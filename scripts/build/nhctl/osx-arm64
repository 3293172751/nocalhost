#!/usr/bin/env bash
#
# Build an linux binary
#

set -eu -o pipefail

TMP_VERSION=${VERSION:-$(git describe 2>/dev/null | sed 's/refs\/tags\///' | sed 's/\(.*\)-.*/\1/' | sed 's/-[0-9]*$//' || true)}
TMP_GITCOMMIT=$(git describe --match=NeVeRmAtCh --always --abbrev=40)
rm -fr syncthing || true
git clone https://github.com/nocalhost/syncthing.git
cd syncthing
go clean -cache
chmod 755 ./xgo.sh
go run build.go -gocmd ./xgo.sh -goarch arm64 -nocalhostVersion="${TMP_VERSION}" -nocalhostCommitId="${TMP_GITCOMMIT}" zip
#expand syncthing-linux-amd64.zip

mv syncthing ./../internal/nhctl/syncthing/bin/syncthing_macos_arm64

filesize=$(ls -l ./../internal/nhctl/syncthing/bin/syncthing_macos_arm64 | awk '{ print $5 }')
minsize=$((1024 * 1024 * 10))
if [ "$filesize" -lt $minsize ]; then
  echo "$filesize < $minsize, syncthing binary is less than 10M, it's not available"
  exit 1
fi

cd ..
rm -fr syncthing || true
#rmdir /s/q syncthing || true

export GOOS=darwin
export GOARCH=arm64

source ./scripts/build/nhctl/.variables

# Override TARGET
TARGET="build/nhctl-$GOOS-$GOARCH"

echo "Building $TARGET"
go build -o "${TARGET}" --ldflags "${LDFLAGS}" "${SOURCE}"